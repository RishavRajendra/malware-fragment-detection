import pandas as pd
import numpy as np
from xgboost import XGBClassifier
from sklearn.cross_validation import train_test_split
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import cross_val_predict
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
import multiprocessing

if __name__ == "__main__":
    print 'Loading Features Set'
    dataset = pd.read_csv("vectorten_files.svm", header = None)
    print 'Feature Set Loaded'

    #Splitting data into X and Y
    X = dataset.iloc[:, 1:] #all columns from 1 to the end
    Y = dataset.iloc[:, 0] #the first column
    print 'X and Y created'

    #Tune parameters for XGBClassifier
    XGBParams = {'max_depth': 5, 'learning_rate': 0.1, 'n_estimators': 1000,
                    'silent': True, 'objective': 'binary:logistic', 'booster': 'gbtree',
                    'nthread': 4, 'min_child_weight': 1,
                    'subsample': 0.8, 'colsample_bytree': 0.8,
                    'scale_pos_weight': 1, 'gamma': 0, 'seed': 27}

    #Load classifiers
    XGBClassifier = XGBClassifier(**XGBParams)

    #Split features into test and train
    kfold = KFold(n_splits=10, random_state=42)

    #Training classifiers
    print '-'*32 + 'Started Training' + '-'*32
    trained_data = cross_val_score(XGBClassifier, np.array(X), np.array(Y), cv=kfold)
    print 'Done Training'
    print '-'*31 + 'Starting Prediction' + '-'*30
    y_predict = cross_val_predict(XGBClassifier, np.array(X), np.array(Y), cv=kfold, n_jobs = 6)
    print '-'*32 + 'Done predicting' + '-'*32

    # predict_proba = cross_val_predict(XGBClassifier, np.array(X), np.array(Y), cv=kfold, n_jobs = 1, method='predict_proba')
    # np.set_printoptions(threshold=np.nan)
    # print('Predicted probabilities for train: ') + np.matrix(predict_proba)

    confusion = confusion_matrix(Y, y_predict)

    print '-'*32 + 'Answers: ' + '-'*32
    print 'Accuracy: ' + (y_predict.mean()*100)

    print 'Confustion Matrix: ' + confusion
